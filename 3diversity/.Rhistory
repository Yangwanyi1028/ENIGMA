patient_type == "Control" & is.na(Disease_activity) ~ "Control",
# CD患者处理
patient_type == "CD" & is.na(Disease_activity) ~ "Unknown",
# 非NA值直接继承
TRUE ~ Disease_activity
)
) %>%
select(-patient_type)  # 移除临时列
}
metadata <- process_disease_activity(metadata)
rownames(metadata) <- metadata$study_id
metadata <- metadata[,-1]
metadata
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
# 输入pathway数据
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data
range(path_data)
hist(path_data)
plot(path_data)
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
dim(path_data)
b
# 输入pathway数据
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
dim(path_data)
min(path_data)
min(path_data)>0
min(path_data)==0
keep
path_data
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data
dim(path_data)
path_data <- t(path_data)
source("~/.active-rstudio-document", echo=TRUE)
# 输入pathway数据
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-5 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
dim(path_data)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/maaslin2_pathway.R", echo=TRUE)
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/4maaslin2/')
# 加载MaAsLin2
library(Maaslin2)
library(dplyr)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-5 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
metadata
path_data
dim(path_data)
path_data[1:4,1:4]
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
v
path_data
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-5 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
path_data
path_data[1:4]
path_data[1:4,]
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
keep <- apply(path_data, 2, mean) > 1E-5 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
path_data[1:4,1:4]
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
mapping_table
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
source("~/.active-rstudio-document", echo=TRUE)
gene_data
path_data
dim(path_data)
# 把三个特征数据合并到一起
combined_data <- rbind(gene_data, microbiome_data, path_data)
sig_res$feature
source("~/.active-rstudio-document", echo=TRUE)
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-5 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
path_data
path_data[1:4,1:4]
path_maaslin_sig_res
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/maaslin2_pathway.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/4maaslin2/')
# 加载MaAsLin2
library(Maaslin2)
library(dplyr)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway_unfilter',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/4maaslin2/')
# 加载MaAsLin2
library(Maaslin2)
library(dplyr)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway_filter',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
dim(sig_res <- read.csv('output_Group_pathway_filter/significant_results.tsv',sep = '\t',header = T)
)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
# keep <- apply(path_data, 2, mean) > 1E-4 &
#   apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
# path_data <- path_data[, keep]
path_data <- t(path_data)
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway_unfilter',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
sig_res <- read.csv('output_Group_pathway_unfilter/significant_results.tsv',sep = '\t',header = T)
dim(sig_res)
dim(path_data)
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
dim(sig_res)
dim(path_data)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
dim(path_data)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
dim(path_data)
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/4maaslin2/')
# 加载MaAsLin2
library(Maaslin2)
library(dplyr)
# 输入数据
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data <- t(path_data)
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway_filter',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
path_data
path_data[1:4,1:4]
path_data <- read.csv("../source_data/humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
path_data <- t(path_data)
keep <- apply(path_data, 2, mean) > 1E-4 &
apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
path_data <- path_data[, keep]
path_data[1:4,1:4]
metadata <- read.csv('../3diversity/new_metadata.csv',row.names = 1)
metadata$Group <- ifelse(metadata$Group != 'Control','CD','Control')
# 替换列名中的非法字符（如冒号、空格等）为下划线
# 更新数据框的列名
new_col_names <- paste("Pathway", 1:ncol(path_data), sep="")
# 设置新的行名
original_col_names <- colnames(path_data)
# 创建映射表
mapping_table <- data.frame(
OriginalRowName = original_col_names,
NewRowName = new_col_names,
stringsAsFactors = FALSE  # 避免将字符列转换为因子
)
write.csv(mapping_table,'mapping_table_pathway_name.csv')
colnames(path_data) <- new_col_names
fit_data <- Maaslin2(
path_data, metadata,
output = 'output_Group_pathway_filter',
min_abundance = 0,
min_prevalence = 0,
normalization = "NONE",
transform = "LOG",
fixed_effects = c('Group'),
reference = c("Group,Control"),
standardize = FALSE,
cores=4)
dim(sig_res)
sig_res <- read.csv('output_Group_pathway_filter/significant_results.tsv',sep = '\t',header = T)
dim(sig_res)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
gene_data <- read.csv("../source_data/ARG68_gene_abundance_20250224.csv", row.names = 1)
rownames(gene_data) <- gene_data$gene_id
gene_name <- gene_data[,c(1,2)]
gene_data <- gene_data[,-c(1,2)]
gene_data <- t(gene_data)
gene_data
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/maaslin2_gene.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/maaslin2_pathway.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
sig_res <- read.csv('output_Group_pathway_filter/significant_results.tsv',sep = '\t',header = T)
dim(sig_res)
sig_res <- read.csv('output_Group_pathway_unfilter/significant_results.tsv',sep = '\t',header = T)
dim(sig_res)
# path_data <- t(path_data)
# keep <- apply(path_data, 2, mean) > 1E-5 &
#   apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
# path_data <- path_data[, keep]
# path_data <- t(path_data)
path_data <- log(path_data+1)
range(path_data)
range(microbiome_data)
microbiome_data <- log(microbiome_data+1)
microbiome_data
range(path_data)
gene_data <- read.csv("../source_data/new_ARG68_gene_abundance_20250224.csv", row.names = 1)
gene_name <- gene_data[,1,drop=FALSE]
gene_data <- gene_data[,-1]
gene_data <- log(gene_data+1)
range(gene_data)
gene_data
microbiome_data <- read.csv("../3diversity/new_species_meta_df.csv", row.names = 1)
microbiome_data$Group <- ifelse(microbiome_data$Group != "Control","CD","Control")
keep <- apply(microbiome_data[,10:ncol(microbiome_data)], 2, mean) > 1E-4 &
apply(microbiome_data[,10:ncol(microbiome_data)] > 0, 2, sum) / nrow(microbiome_data[,10:ncol(microbiome_data)]) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
microbiome_data <- microbiome_data[, keep]
# metadata <- microbiome_data[,1:9]
microbiome_data <- microbiome_data[,10:ncol(microbiome_data)]
microbiome_data <- t(microbiome_data)
microbiome_data <- log(microbiome_data+1)
range(path_data)
# 输入基因数据
gene_data <- read.csv("../source_data/new_ARG68_gene_abundance_20250224.csv", row.names = 1)
gene_name <- gene_data[,1,drop=FALSE]
gene_data <- gene_data[,-1]
gene_data <- log(gene_data+1)
range(gene_data)
path_data <- read.csv("../source_data/new_humann_pathabundance_relab_AUS_HK_KM_479_unstratified.csv", row.names = 1)
# path_data <- t(path_data)
# keep <- apply(path_data, 2, mean) > 1E-5 &
#   apply(path_data > 0, 2, sum) / nrow(path_data) > 0.1 # mean abundance > 1E-4、Prevalence > 0.1
# path_data <- path_data[, keep]
# path_data <- t(path_data)
path_data <- log(path_data+1)
range(path_data)
gene_data <- log(gene_data+0.01)
gene_data
range(gene_data)
gene_data <- log(gene_data+1)
range(gene_data)
# 输入基因数据
gene_data <- read.csv("../source_data/new_ARG68_gene_abundance_20250224.csv", row.names = 1)
gene_name <- gene_data[,1,drop=FALSE]
gene_data <- gene_data[,-1]
gene_data <- log(gene_data+1)
range(gene_data)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
range(gene_data)
gene_data <- log(log(gene_data+1)+1)
range(gene_data)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
cluster_colors = c("#A1A9D0","#F0988C","#B883D4","#CFEAF1")# ,"#C4A5DE","#F6CA5E","#9E99EE"
names(cluster_colors) <- levels(metadata$Cluster)  # 给颜色命名
annotation_colors <- list(
Region = region_colors,
Disease_activity = disease_colors,
Group = group_colors,
feature_type = Feature_Type_colors,
CD_status = CD_Status_colors,
Cluster = cluster_colors
)
# 再画一个更新后的热图
p2 <- pheatmap(
combined_data,
cutree_cols = 4,
clustering_distance_rows = "correlation",
scale = "none",
clustering_distance_cols = "correlation",
clustering_method = "ward.D2",
annotation_col = metadata,  # 这次包含了Cluster信息
annotation_colors = annotation_colors,
annotation_row = row_annotation,
show_rownames = FALSE,
show_colnames = FALSE,  # 这次不显示列名字
# main = "Heatmap of VFG, Species, Path Features with Sample Clustering"  # 热图标题
filename = 'sample_features_new.png',
width = 10,height = 12
)
# 打印每个Cluster对应的样本
for (cluster in levels(metadata$Cluster)) {
cat(sprintf("Cluster %s samples:\n", cluster))  # 打印Cluster编号
print(rownames(metadata[metadata$Cluster == cluster, ]))  # 打印样本名字
}
# 把结果保存到CSV文件
write.csv(metadata, file = "clustered_samples.csv", row.names = TRUE)  # 保存为CSV
# 打印metadata看一看
print(metadata)
# 计算每个Cluster的中心（平均值）
cluster_centers <- do.call(cbind, lapply(levels(metadata$Cluster), function(cluster) {
colMeans(combined_data[, metadata$Cluster == cluster], na.rm = TRUE)  # 计算每个Cluster的均值
}))
colnames(cluster_centers) <- levels(metadata$Cluster)  # 给列名加上Cluster名字
# 计算每个样本到各Cluster中心的欧几里得距离
distance_matrix <- sapply(1:ncol(cluster_centers), function(cluster_idx) {
apply(combined_data, 2, function(sample) {
sqrt(sum((sample - cluster_centers[, cluster_idx])^2))  # 欧几里得距离
})
})
colnames(distance_matrix) <- levels(metadata$Cluster)  # 给距离矩阵列名加上Cluster名字
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
# 绘制每个 Cluster 的 `region` 饼图，使用指定颜色
plot_cluster_pie(
metadata,
group_col = "Region",
plot_title_prefix = "",
color_palette = region_colors
)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/heatmap_all_feat.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/4maaslin2/maaslin2_pathway.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/3diversity/bray-curtis.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/3diversity/chao1_plot.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/3diversity/chao1_plot.R", echo=TRUE)
source("~/Downloads/ENIGMA_STUDY_DATA/3diversity/shannon_plot.R", echo=TRUE)
