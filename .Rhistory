outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
corrplot(t(cor_t),
method = "pie",
number.digits = 2,
hclust.method = "ward",
# sig.level = significance_level,
insig = "label_sig",number.font = T,
pch.cex = 2.5,    # 设置星号大小
# p.mat = p_matrix,
tl.col = "black",  # 设置标签颜色为黑色
tl.cex = 0.8,      # 设置标签字体大小为 0.8
cl.cex = 0.8,      # 设置颜色图例字体大小为 0.8
tl.pos = "lt",     # 设置标签位置
outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
corrplot(t(cor_t),
method = "pie",
number.digits = 2,
hclust.method = "ward",
# sig.level = significance_level,
insig = "label_sig",number.font = 12,
pch.cex = 2.5,    # 设置星号大小
# p.mat = p_matrix,
tl.col = "black",  # 设置标签颜色为黑色
tl.cex = 0.8,      # 设置标签字体大小为 0.8
cl.cex = 0.8,      # 设置颜色图例字体大小为 0.8
tl.pos = "lt",     # 设置标签位置
outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
source("~/.active-rstudio-document", echo=TRUE)
# 绘制箱线图
ggplot(plot_data, aes(x = ComparisonType, y = Distance, fill = ComparisonType)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Bray-Curtis Distance Comparisons",
x = "Comparison Type",
y = "Bray-Curtis Distance"
) +
coord_cartesian(ylim = c(0, 1)) +
stat_compare_means(
comparisons = comparisons,
method = "wilcox.test",
label = "p.signif",  # 显示星号（*表示p < 0.05，** < 0.01等）
step.increase = 0.1,  # 调整标签的垂直位置避免重叠
symnum.args = list(
cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*", "ns")
)
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1,size = 12),
legend.position = "none",
plot.title = element_text(size = 16),  # 设置标题字体大小
axis.title.x = element_text(size = 14),  # 设置x轴标题字体大小
axis.title.y = element_text(size = 14),  # 设置y轴标题字体大小
axis.text.y = element_text(size = 12),   # 设置y轴刻度标签字体大小
legend.title = element_text(size = 12),  # 设置图例标题字体大小
legend.text = element_text(size = 10)    # 设置图例标签字体大小
) +
scale_fill_manual(values = c(
"Within-CD active" = "#BCBD22",
"Within-CD inactive" = "#377EB8",
"Within-Control" = "#4DAF4A",
"CD active-vs-CD inactive" = "#9467BD",
"CD active-vs-Control" = "#FF7F00",
"CD inactive-vs-Control" = "#AEC7E8"
))
# 绘制箱线图
ggplot(plot_data, aes(x = ComparisonType, y = Distance, fill = ComparisonType)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Bray-Curtis Distance Comparisons",
x = "Comparison Type",
y = "Bray-Curtis Distance"
) +
stat_compare_means(
comparisons = comparisons,
method = "wilcox.test",
label = "p.signif",  # 显示星号（*表示p < 0.05，** < 0.01等）
step.increase = 0.1,  # 调整标签的垂直位置避免重叠
symnum.args = list(
cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*", "ns")
)
) +
coord_cartesian(ylim = c(0, 1)) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1,size = 12),
legend.position = "none",
plot.title = element_text(size = 16),  # 设置标题字体大小
axis.title.x = element_text(size = 14),  # 设置x轴标题字体大小
axis.title.y = element_text(size = 14),  # 设置y轴标题字体大小
axis.text.y = element_text(size = 12),   # 设置y轴刻度标签字体大小
legend.title = element_text(size = 12),  # 设置图例标题字体大小
legend.text = element_text(size = 10)    # 设置图例标签字体大小
) +
scale_fill_manual(values = c(
"Within-CD active" = "#BCBD22",
"Within-CD inactive" = "#377EB8",
"Within-Control" = "#4DAF4A",
"CD active-vs-CD inactive" = "#9467BD",
"CD active-vs-Control" = "#FF7F00",
"CD inactive-vs-Control" = "#AEC7E8"
))
# 绘制箱线图
ggplot(plot_data, aes(x = ComparisonType, y = Distance, fill = ComparisonType)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Bray-Curtis Distance Comparisons",
x = "Comparison Type",
y = "Bray-Curtis Distance"
) +
stat_compare_means(
comparisons = comparisons,
method = "wilcox.test",
label = "p.signif",  # 显示星号（*表示p < 0.05，** < 0.01等）
step.increase = 0.1,  # 调整标签的垂直位置避免重叠
symnum.args = list(
cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*", "ns")
)
) +
scale_y_continuous(limits = c(0,1)) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1,size = 12),
legend.position = "none",
plot.title = element_text(size = 16),  # 设置标题字体大小
axis.title.x = element_text(size = 14),  # 设置x轴标题字体大小
axis.title.y = element_text(size = 14),  # 设置y轴标题字体大小
axis.text.y = element_text(size = 12),   # 设置y轴刻度标签字体大小
legend.title = element_text(size = 12),  # 设置图例标题字体大小
legend.text = element_text(size = 10)    # 设置图例标签字体大小
) +
scale_fill_manual(values = c(
"Within-CD active" = "#BCBD22",
"Within-CD inactive" = "#377EB8",
"Within-Control" = "#4DAF4A",
"CD active-vs-CD inactive" = "#9467BD",
"CD active-vs-Control" = "#FF7F00",
"CD inactive-vs-Control" = "#AEC7E8"
))
# 绘制箱线图
ggplot(plot_data, aes(x = ComparisonType, y = Distance, fill = ComparisonType)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Bray-Curtis Distance Comparisons",
x = "Comparison Type",
y = "Bray-Curtis Distance"
) +
stat_compare_means(
comparisons = comparisons,
method = "wilcox.test",
label = "p.signif",  # 显示星号（*表示p < 0.05，** < 0.01等）
step.increase = 0.1,  # 调整标签的垂直位置避免重叠
symnum.args = list(
cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*", "ns")
)
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1,size = 12),
legend.position = "none",
plot.title = element_text(size = 16),  # 设置标题字体大小
axis.title.x = element_text(size = 14),  # 设置x轴标题字体大小
axis.title.y = element_text(size = 14),  # 设置y轴标题字体大小
axis.text.y = element_text(size = 12),   # 设置y轴刻度标签字体大小
legend.title = element_text(size = 12),  # 设置图例标题字体大小
legend.text = element_text(size = 10)    # 设置图例标签字体大小
) +
scale_fill_manual(values = c(
"Within-CD active" = "#BCBD22",
"Within-CD inactive" = "#377EB8",
"Within-Control" = "#4DAF4A",
"CD active-vs-CD inactive" = "#9467BD",
"CD active-vs-Control" = "#FF7F00",
"CD inactive-vs-Control" = "#AEC7E8"
))
# 绘制箱线图
p1 <- ggplot(plot_data, aes(x = ComparisonType, y = Distance, fill = ComparisonType)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Bray-Curtis Distance Comparisons",
x = "Comparison Type",
y = "Bray-Curtis Distance"
) +
stat_compare_means(
comparisons = comparisons,
method = "wilcox.test",
label = "p.signif",  # 显示星号（*表示p < 0.05，** < 0.01等）
step.increase = 0.1,  # 调整标签的垂直位置避免重叠
symnum.args = list(
cutpoints = c(0, 0.001, 0.01, 0.05, 1),
symbols = c("***", "**", "*", "ns")
)
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1,size = 12),
legend.position = "none",
plot.title = element_text(size = 16),  # 设置标题字体大小
axis.title.x = element_text(size = 14),  # 设置x轴标题字体大小
axis.title.y = element_text(size = 14),  # 设置y轴标题字体大小
axis.text.y = element_text(size = 12),   # 设置y轴刻度标签字体大小
legend.title = element_text(size = 12),  # 设置图例标题字体大小
legend.text = element_text(size = 10)    # 设置图例标签字体大小
) +
scale_fill_manual(values = c(
"Within-CD active" = "#BCBD22",
"Within-CD inactive" = "#377EB8",
"Within-Control" = "#4DAF4A",
"CD active-vs-CD inactive" = "#9467BD",
"CD active-vs-Control" = "#FF7F00",
"CD inactive-vs-Control" = "#AEC7E8"
))
p2 <- p1 +
coord_cartesian(ylim = c(0, 1))
p2
p1
source("/Volumes/651/loquat/metabolites/corrplot/corrplot.R", echo=TRUE)
corrplot(cor_matrix,
method = "pie",
hclust.method = "ward",
sig.level = significance_level,
insig = "label_sig",
pch.cex = 2.5,    # 设置星号大小
p.mat = p_matrix,
tl.col = "black",  # 设置标签颜色为黑色
tl.cex = 0.8,      # 设置标签字体大小为 0.8
cl.cex = 0.8,      # 设置颜色图例字体大小为 0.8
tl.pos = "lt",     # 设置标签位置
outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
cor_matrix
metab_expr_fatty_acyls = read.csv('/Volumes/651/loquat/metabolites/metab_expr_fatty_acyls.csv',row.names = 1)
plant_pathogen_expr_t4_t2 = read.csv('/Volumes/651/loquat/metabolites/plant_pathogen_expr_t4_t2.csv',row.names = 1)
plant_pathogen_expr = plant_pathogen_expr_t4_t2
gene_name$combined <- paste0(gene_name$gene.symbol, " ","(", gene_name$Gene.ID,")")
plant_pathogen_gene_symbol = gene_name[gene_name$Gene.ID %in% rownames(plant_pathogen_expr),]
plant_pathogen_gene_symbol$combined
rownames(plant_pathogen_expr) <-  c("CNGC1 (Eja16G002070)", "CNGC1 (Eja10G013420)",
"NACK2 (Eja05G008400)","CNGC2 (Eja13G019470)",
"CNGC1 (Eja16G002030)","EIX2 (Eja16G016700)" ,
"CNGC1 (Eja16G002120)" ,"RPM1 (Eja14G002130)",
"CNGC1 (Eja10G016420)", "CML49 (Eja06G004690)")
rownames(plant_pathogen_expr) <- plant_pathogen_gene_symbol$combined
write.csv(plant_pathogen_expr,'plant_pathogen_expr_with_genesymbol.csv')
# 步骤1：确保输入矩阵的样本对齐
# 假设两个矩阵的列名为样本ID，行名为代谢物/基因名称
common_samples <- intersect(colnames(metab_expr_fatty_acyls),
colnames(plant_pathogen_expr))
# 提取共有的样本数据
metab_common <- metab_expr_fatty_acyls[, common_samples]
gene_common <- plant_pathogen_expr[, common_samples]
# 步骤2：计算相关性矩阵
# 转置矩阵使样本为行，特征为列
metab_t <- t(metab_common)
gene_t <- t(gene_common)
# 计算Pearson相关系数
cor_matrix <- cor(metab_t, gene_t, method = "pearson")
write.csv(cor_matrix,'cor_matrix.csv')
# 计算p值矩阵（示例）
cor.test.p <- function(x, y){
cor.test(x, y)$p.value
}
p_matrix <- matrix(mapply(cor.test.p,
as.data.frame(metab_t),
as.data.frame(gene_t)),
nrow = ncol(metab_t),
ncol = ncol(gene_t))
rownames(p_matrix) <- colnames(metab_t)
colnames(p_matrix) <- colnames(gene_t)
p_matrix = round(p_matrix,2)
write.csv(p_matrix,'p_matrix.csv')
significance_level <- 0.05
# 创建星号标记矩阵
significance_stars <- ifelse(p_matrix < significance_level, "*", "")
# 步骤3：corrplot绘制热图
pdf("/Volumes/651/loquat/metabolites/correlation_heatmap_T4_T2.pdf", width = 8, height = 8)
# 默认颜色梯度
default_colors <- colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE",
"#D1E5F0", "#F7F7F7", "#FDDBC7", "#F4A582",
"#D6604D", "#B2182B", "#67001F"))
corrplot(cor_matrix,
method = "pie",
hclust.method = "ward",
sig.level = significance_level,
insig = "label_sig",
pch.cex = 2.5,    # 设置星号大小
p.mat = p_matrix,
tl.col = "black",  # 设置标签颜色为黑色
tl.cex = 0.8,      # 设置标签字体大小为 0.8
cl.cex = 0.8,      # 设置颜色图例字体大小为 0.8
tl.pos = "lt",     # 设置标签位置
outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
dev.off()
dev.off()
plant_pathogen_expr
rownames(plant_pathogen_expr) <-  c("CNGC1 (Eja16G002070)", "CNGC1 (Eja10G013420)",
"NACK2 (Eja05G008400)","CNGC2 (Eja13G019470)",
"CNGC1 (Eja16G002030)","EIX2 (Eja16G016700)" ,
"CNGC1 (Eja16G002120)" ,"RPM1 (Eja14G002130)",
"CNGC1 (Eja10G016420)", "CML49 (Eja06G004690)")
write.csv(plant_pathogen_expr,'plant_pathogen_expr_with_genesymbol.csv')
rownames(plant_pathogen_expr) <-  c("CNGC1 (Eja16G002070)", "CNGC1 (Eja10G013420)",
"NACK2 (Eja05G008400)","CNGC2 (Eja13G019470)",
"CNGC1 (Eja16G002030)","EIX2 (Eja16G016700)" ,
"CNGC1 (Eja16G002120)" ,"RPM1 (Eja14G002130)",
"CNGC1 (Eja10G016420)", "CML49 (Eja06G004690)")
write.csv(plant_pathogen_expr,'plant_pathogen_expr_with_genesymbol.csv')
# 步骤1：确保输入矩阵的样本对齐
# 假设两个矩阵的列名为样本ID，行名为代谢物/基因名称
common_samples <- intersect(colnames(metab_expr_fatty_acyls),
colnames(plant_pathogen_expr))
# 提取共有的样本数据
metab_common <- metab_expr_fatty_acyls[, common_samples]
gene_common <- plant_pathogen_expr[, common_samples]
# 步骤2：计算相关性矩阵
# 转置矩阵使样本为行，特征为列
metab_t <- t(metab_common)
gene_t <- t(gene_common)
# 计算Pearson相关系数
cor_matrix <- cor(metab_t, gene_t, method = "pearson")
write.csv(cor_matrix,'cor_matrix.csv')
# 计算p值矩阵（示例）
cor.test.p <- function(x, y){
cor.test(x, y)$p.value
}
p_matrix <- matrix(mapply(cor.test.p,
as.data.frame(metab_t),
as.data.frame(gene_t)),
nrow = ncol(metab_t),
ncol = ncol(gene_t))
rownames(p_matrix) <- colnames(metab_t)
colnames(p_matrix) <- colnames(gene_t)
p_matrix = round(p_matrix,2)
write.csv(p_matrix,'p_matrix.csv')
significance_level <- 0.05
# 创建星号标记矩阵
significance_stars <- ifelse(p_matrix < significance_level, "*", "")
# 步骤3：corrplot绘制热图
pdf("/Volumes/651/loquat/metabolites/correlation_heatmap_T4_T2.pdf", width = 8, height = 8)
# 默认颜色梯度
default_colors <- colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE",
"#D1E5F0", "#F7F7F7", "#FDDBC7", "#F4A582",
"#D6604D", "#B2182B", "#67001F"))
corrplot(cor_matrix,
method = "pie",
hclust.method = "ward",
sig.level = significance_level,
insig = "label_sig",
pch.cex = 2.5,    # 设置星号大小
p.mat = p_matrix,
tl.col = "black",  # 设置标签颜色为黑色
tl.cex = 0.8,      # 设置标签字体大小为 0.8
cl.cex = 0.8,      # 设置颜色图例字体大小为 0.8
tl.pos = "lt",     # 设置标签位置
outline = TRUE,    # 添加轮廓
number.cex = 0.8,  # 设置数字字体大小
cl.align.text = "l",  # 设置颜色图例文本对齐方式
col = default_colors(200),
tl.srt = 60)  # 使用默认颜色梯度
dev.off()
# 安装MaAsLin2
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# 安装MaAsLin2
BiocManager::install("MaAsLin2")
# 加载MaAsLin2
library(MaAsLin2)
# 安装MaAsLin2
BiocManager::install("MaAsLin2")
install_github("biobakery/Maaslin2")
library("devtools")
install_github("biobakery/Maaslin2")
BiocManager::install("Maaslin2")
install.packages(c('lmerTest','pbapply','car','dplyr','vegan','chemometrics','ggplot2','pheatmap','hash','logging','data.table','glmmTMB','MASS','cplm','pscl'), repos='https://mirrors.hust.edu.cn/CRAN/')
install.packages(c("lmerTest", "pbapply", "car", "dplyr", "vegan", "chemometrics", "ggplot2", "pheatmap", "hash", "logging", "data.table", "glmmTMB", "MASS", "cplm", "pscl"), repos = "https://mirrors.hust.edu.cn/CRAN/")
install.packages(c("lmerTest", "pbapply", "car", "dplyr", "vegan", "chemometrics", "ggplot2", "pheatmap", "hash", "logging", "data.table", "glmmTMB", "MASS", "cplm", "pscl"), repos = "https://mirrors.hust.edu.cn/CRAN/")
install.packages(c("lmerTest", "pbapply", "car", "dplyr", "vegan", "chemometrics", "ggplot2", "pheatmap", "hash", "logging", "data.table", "glmmTMB", "MASS", "cplm", "pscl"), repos = "https://mirrors.hust.edu.cn/CRAN/")
BiocManager::install("Maaslin2")
install_github("biobakery/Maaslin2")
library("devtools")
install_github("biobakery/Maaslin2")
BiocManager::install('metagenomeSeq')
BiocManager::install("metagenomeSeq")
BiocManager::install("metagenomeSeq")
install_github("Bioconductor-mirror/metagenomeSeq")
install.packages("~/Downloads/metagenomeSeq_1.48.1.tgz", repos = NULL, type = .Platform$pkgType)
library(metagenomeSeq)
install.packages("Wrench")
library(metagenomeSeq)
BiocManager::install("Wrench")
install.packages("~/Downloads/Wrench_1.24.0.tgz", repos = NULL, type = .Platform$pkgType)
library(metagenomeSeq)
install_github("Bioconductor-mirror/metagenomeSeq")
library("devtools")
install_github("biobakery/Maaslin2")
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/')
# 加载MaAsLin2
library(MaAsLin2)
# 输入数据
microbiome_data <- read.csv("/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/source_data/", row.names = 1)
source("~/Downloads/ENIGMA_STUDY_DATA/3diversity/shannon_plot.R", echo=TRUE)
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/')
# 加载MaAsLin2
library(MaAsLin2)
# 输入数据
microbiome_data <- read.csv("3diversity/", row.names = 1)
# 输入数据
microbiome_data <- read.csv("3diversity/new_species_meta_df.csv", row.names = 1)
microbiome_data
class(microbiome_data)
microbiome_data[1,1]
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/3diversity/')
library(dplyr)
library(plyr)
library(vegan)    # 生态学分析常用包
library(ggplot2)  # 绘图包
library(ggpubr) # PCoA分析包
class_colors <- c("#1F77B4","#FF7F0E","#E377C2","#2CA02C",
"#9467BD","#17BECF","#AEC7E8","#D62728",
"#7F7F7F","#BCBD22","pink")
# metadata
metadata_479 = read.csv('../1maketable/metadata_filter.csv',row.names = 1)
sample_479 <- metadata_479$study_id
# 物种丰度表
species_df = readxl::read_excel('../source_data/merged_species_abundance_mp4_20240614_605samples.xlsx')
new_species_df <- species_df[species_df$clade_name %in% sample_479,]
dim(new_species_df)
new_species_df <- new_species_df[,-c(2,3)]
metadata1 <- metadata_479[,c('study_id','Group','Gender','Smoke',
'Region','History.of.bowel.resection.surgery',
"C.Reactive.Protein",'Inflammatory','Stricturing',
'Penetrating')]
new_species_meta_df <- merge(metadata1,new_species_df,by.x = 'study_id',by.y = 'clade_name')
new_species_meta_df[1:4,1:4]
df = new_species_meta_df
write.csv(new_species_meta_df,'new_species_meta_df.csv',row.names = F)
write.csv(metadata1,'new_metadata.csv',row.names = F)
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/')
# 输入数据
microbiome_data <- read.csv("3diversity/new_species_meta_df.csv", row.names = 1)
microbiome_data
microbiome_data[1,1]
new_species_meta_df[1:4,1:4]
new_species_df
write.csv(new_species_df,'new_species_df.csv',row.names = 1)
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/3diversity/')
library(dplyr)
library(plyr)
library(vegan)    # 生态学分析常用包
library(ggplot2)  # 绘图包
library(ggpubr) # PCoA分析包
class_colors <- c("#1F77B4","#FF7F0E","#E377C2","#2CA02C",
"#9467BD","#17BECF","#AEC7E8","#D62728",
"#7F7F7F","#BCBD22","pink")
# metadata
metadata_479 = read.csv('../1maketable/metadata_filter.csv',row.names = 1)
sample_479 <- metadata_479$study_id
# 物种丰度表
species_df = readxl::read_excel('../source_data/merged_species_abundance_mp4_20240614_605samples.xlsx')
new_species_df <- species_df[species_df$clade_name %in% sample_479,]
dim(new_species_df)
new_species_df <- new_species_df[,-c(2,3)]
metadata1 <- metadata_479[,c('study_id','Group','Gender','Smoke',
'Region','History.of.bowel.resection.surgery',
"C.Reactive.Protein",'Inflammatory','Stricturing',
'Penetrating')]
new_species_meta_df <- merge(metadata1,new_species_df,by.x = 'study_id',by.y = 'clade_name')
new_species_meta_df[1:4,1:4]
df = new_species_meta_df
write.csv(new_species_df,'new_species_df.csv',row.names = 1)
write.csv(new_species_df,'new_species_df.csv')
metadata1
write.csv(metadata1,'new_metadata.csv',row.names = F)
metadata <- read.csv("metadata.csv", row.names = 1)
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/')
# 加载MaAsLin2
library(MaAsLin2)
metadata <- read.csv("3diversity/metadata.csv", row.names = 1)
rm(list = ls())
setwd('/Users/yangwanyi/Downloads/ENIGMA_STUDY_DATA/')
# 加载MaAsLin2
library(MaAsLin2)
# 输入数据
microbiome_data <- read.csv("3diversity/new_species_meta_df.csv", row.names = 1)
source("~/Downloads/ENIGMA_STUDY_DATA/maaslin2.R", echo=TRUE)
library("devtools")
install_github("biobakery/Maaslin2")
